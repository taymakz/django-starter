# Generated by Django 5.0.1 on 2024-02-10 15:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("catalog", "0025_alter_product_short_slug"),
        ("media", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="OrderAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("receiver_fullname", models.CharField(max_length=100)),
                ("receiver_phone", models.CharField(max_length=11)),
                ("receiver_city", models.CharField(max_length=100)),
                ("receiver_province", models.CharField(max_length=100)),
                ("receiver_postal_code", models.CharField(max_length=100)),
                ("receiver_address", models.CharField(max_length=300)),
                ("receiver_national_code", models.CharField(max_length=11)),
            ],
            options={
                "db_table": "order_address",
            },
        ),
        migrations.CreateModel(
            name="ShippingRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("all_area", models.BooleanField(default=False)),
                (
                    "area",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("آذربایجان شرقی", "آذربایجان شرقی"),
                            ("آذربایجان غربی", "آذربایجان غربی"),
                            ("اردبیل", "اردبیل"),
                            ("اصفهان", "اصفهان"),
                            ("البرز", "البرز"),
                            ("ایلام", "ایلام"),
                            ("بوشهر", "بوشهر"),
                            ("تهران", "تهران"),
                            ("چهارمحال وبختیاری", "چهارمحال وبختیاری"),
                            ("خراسان جنوبی", "خراسان جنوبی"),
                            ("خراسان رضوی", "خراسان رضوی"),
                            ("خراسان شمالی", "خراسان شمالی"),
                            ("خوزستان", "خوزستان"),
                            ("زنجان", "زنجان"),
                            ("سمنان", "سمنان"),
                            ("سیستان وبلوچستان", "سیستان وبلوچستان"),
                            ("فارس", "فارس"),
                            ("قزوین", "قزوین"),
                            ("قم", "قم"),
                            ("کردستان", "کردستان"),
                            ("کرمان", "کرمان"),
                            ("کرمانشاه", "کرمانشاه"),
                            ("کهگیلویه وبویراحمد", "کهگیلویه وبویراحمد"),
                            ("گلستان", "گلستان"),
                            ("گیلان", "گیلان"),
                            ("لرستان", "لرستان"),
                            ("مازندران", "مازندران"),
                            ("مرکزی", "مرکزی"),
                            ("هرمزگان", "هرمزگان"),
                            ("همدان", "همدان"),
                            ("یزد", "یزد"),
                        ],
                        max_length=24,
                        null=True,
                    ),
                ),
                ("pay_at_destination", models.BooleanField(default=False)),
                (
                    "price",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "free_shipping_threshold",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                ("is_public", models.BooleanField(default=False)),
                (
                    "order",
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
            ],
            options={
                "db_table": "shipping_rate",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=60, null=True)),
                (
                    "code",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[a-zA-Z0-9]*$",
                                "Only alphanumeric characters are allowed.",
                            )
                        ],
                    ),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[("%", "Percentage"), ("$", "Fixed amount")],
                        max_length=1,
                    ),
                ),
                (
                    "discount_amount",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "max_usage",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "max_usage_per_user",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "min_order_total",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "max_order_total",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("only_first_order", models.BooleanField(default=False)),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("expire_at", models.DateTimeField(blank=True, null=True)),
                ("only_brands", models.ManyToManyField(to="catalog.brand")),
                ("only_categories", models.ManyToManyField(to="catalog.category")),
                ("only_products", models.ManyToManyField(to="catalog.product")),
                ("only_users", models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "db_table": "coupon",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="CouponUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="coupon_usages",
                        to="order.coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="coupon_usages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "coupon_usage",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "slug",
                    models.SlugField(blank=True, max_length=5, null=True, unique=True),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("باز", "Open Order"),
                            ("در انتظار پرداخت", "Pending Payment"),
                            ("پرداخت شده", "Paid"),
                        ],
                        default="باز",
                        max_length=20,
                    ),
                ),
                ("lock_modify_until", models.DateTimeField(blank=True, null=True)),
                ("repayment_expire_at", models.DateTimeField(blank=True, null=True)),
                (
                    "delivery_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("لغو شده", "Canceled"),
                            ("در انتظار تایید", "Pending"),
                            ("درحال پردازش", "Processing"),
                            ("ارسال شده", "Shipped"),
                            ("تحویل داده شده", "Delivered"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "delivery_canceled_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "tracking_code",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "delivery_status_modified_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("ordered_at", models.DateTimeField(blank=True, null=True)),
                ("shipped_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("final_paid_price", models.PositiveBigIntegerField(default=0)),
                ("final_profit_price", models.PositiveBigIntegerField(default=0)),
                (
                    "final_total_items_final_price",
                    models.PositiveBigIntegerField(default=0),
                ),
                (
                    "final_total_items_before_discount_price",
                    models.PositiveBigIntegerField(default=0),
                ),
                (
                    "final_coupon_effect_price",
                    models.PositiveBigIntegerField(default=0),
                ),
                (
                    "final_shipping_effect_price",
                    models.PositiveBigIntegerField(default=0),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="order.coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "address",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="order",
                        to="order.orderaddress",
                    ),
                ),
                (
                    "shipping_rate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="order.shippingrate",
                    ),
                ),
            ],
            options={
                "db_table": "order",
                "ordering": ["-ordered_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.PositiveSmallIntegerField(default=0)),
                (
                    "final_price",
                    models.PositiveBigIntegerField(
                        blank=True, editable=False, null=True
                    ),
                ),
                (
                    "final_price_before_discount",
                    models.PositiveBigIntegerField(
                        blank=True, editable=False, null=True
                    ),
                ),
                (
                    "final_discount",
                    models.PositiveBigIntegerField(
                        blank=True, editable=False, null=True
                    ),
                ),
                (
                    "final_profit",
                    models.PositiveBigIntegerField(
                        blank=True, editable=False, null=True
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="order.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_baskets",
                        to="catalog.product",
                    ),
                ),
            ],
            options={
                "db_table": "order_item",
            },
        ),
        migrations.CreateModel(
            name="ShippingService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=115)),
                ("url", models.URLField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="shipping_services",
                        to="media.media",
                    ),
                ),
            ],
            options={
                "db_table": "shipping_service",
            },
        ),
        migrations.AddField(
            model_name="shippingrate",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shipping_rates",
                to="order.shippingservice",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="shippingrate",
            unique_together={
                ("service", "all_area", "is_public"),
                ("service", "area", "is_public"),
            },
        ),
    ]
