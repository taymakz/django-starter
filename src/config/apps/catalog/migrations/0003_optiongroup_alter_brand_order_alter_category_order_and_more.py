# Generated by Django 5.0.1 on 2024-01-28 20:12

import config.libs.db.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("catalog", "0002_remove_category_depth_remove_category_numchild_and_more"),
        ("media", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="OptionGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=255)),
            ],
            options={
                "verbose_name": "Option Group",
                "verbose_name_plural": "Option Groups",
            },
        ),
        migrations.AlterField(
            model_name="brand",
            name="order",
            field=models.PositiveSmallIntegerField(blank=True, default=1, null=True),
        ),
        migrations.AlterField(
            model_name="category",
            name="order",
            field=models.PositiveSmallIntegerField(blank=True, default=1, null=True),
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=64)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("option", "Option"),
                            ("multi_option", "Multi Option"),
                        ],
                        default="text",
                        max_length=16,
                    ),
                ),
                ("required", models.BooleanField(default=False)),
                (
                    "option_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="catalog.optiongroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Option",
                "verbose_name_plural": "Option",
            },
        ),
        migrations.CreateModel(
            name="OptionGroupValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=255)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.optiongroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Option Group Value",
                "verbose_name_plural": "Option Group Values",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "structure",
                    models.CharField(
                        choices=[
                            ("standalone", "Standalone"),
                            ("parent", "Parent"),
                            ("child", "Child"),
                        ],
                        default="standalone",
                        max_length=16,
                    ),
                ),
                ("title_ir", models.CharField(blank=True, max_length=255, null=True)),
                ("title_en", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "upc",
                    config.libs.db.fields.UpperCaseCharField(
                        blank=True, max_length=24, null=True, unique=True
                    ),
                ),
                ("is_public", models.BooleanField(default=True)),
                ("meta_title", models.CharField(blank=True, max_length=128, null=True)),
                ("meta_description", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(allow_unicode=True, unique=True)),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="categories", to="catalog.category"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="catalog.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
            },
        ),
        migrations.CreateModel(
            name="ProductAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=64)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("option", "Option"),
                            ("multi_option", "Multi Option"),
                        ],
                        default="text",
                        max_length=16,
                    ),
                ),
                ("required", models.BooleanField(default=False)),
                (
                    "option_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="catalog.optiongroup",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Attribute",
                "verbose_name_plural": "Product Attributes",
            },
        ),
        migrations.CreateModel(
            name="ProductAttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value_text", models.TextField(blank=True, null=True)),
                ("value_integer", models.IntegerField(blank=True, null=True)),
                ("value_float", models.FloatField(blank=True, null=True)),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.productattribute",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.product",
                    ),
                ),
                (
                    "value_multi_option",
                    models.ManyToManyField(
                        blank=True,
                        related_name="multi_valued_attribute_value",
                        to="catalog.optiongroupvalue",
                    ),
                ),
                (
                    "value_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="catalog.optiongroupvalue",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attribute Value",
                "verbose_name_plural": "Attribute Values",
                "unique_together": {("product", "attribute")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="attributes",
            field=models.ManyToManyField(
                through="catalog.ProductAttributeValue", to="catalog.productattribute"
            ),
        ),
        migrations.CreateModel(
            name="ProductClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title_ir", models.CharField(db_index=True, max_length=255)),
                ("title_en", models.CharField(db_index=True, max_length=255)),
                (
                    "description",
                    models.CharField(blank=True, max_length=2048, null=True),
                ),
                ("slug", models.SlugField(allow_unicode=True, unique=True)),
                ("track_stock", models.BooleanField(default=True)),
                ("require_shipping", models.BooleanField(default=True)),
                ("options", models.ManyToManyField(blank=True, to="catalog.option")),
            ],
            options={
                "verbose_name": "Product Class",
                "verbose_name_plural": "Product Classes",
            },
        ),
        migrations.AddField(
            model_name="productattribute",
            name="product_class",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attributes",
                to="catalog.productclass",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="catalog.productclass",
            ),
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="media.media"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="catalog.product",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="ProductRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rank", models.PositiveSmallIntegerField(default=0)),
                (
                    "primary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_recommendation",
                        to="catalog.product",
                    ),
                ),
                (
                    "recommendation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.product",
                    ),
                ),
            ],
            options={
                "ordering": ("primary", "-rank"),
                "unique_together": {("primary", "recommendation")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="recommended_products",
            field=models.ManyToManyField(
                blank=True,
                through="catalog.ProductRecommendation",
                to="catalog.product",
            ),
        ),
    ]
