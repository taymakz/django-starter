# Define a rate limit zone with a 500MB memory size and a rate of 50 requests per second
limit_req_zone $binary_remote_addr zone=mylimit:500m rate=50r/s;

# Return a 429 status (Too Many Requests) if the rate limit is exceeded
limit_req_status 429;

# Define an upstream server for the Django application
upstream django_server {
    server django_project:8000;
}

server {
    listen 80;
    server_name ~^(?<subdomain>.+)\.(127.0.0.1\.ir|127.0.0.1\.com);
    client_max_body_size 100M;

    location / {
        # Apply rate limiting defined in the mylimit zone
        limit_req zone=mylimit;

        # Proxy requests to the Django server
        proxy_pass http://django_server$request_uri;

        # Set headers for the proxy connection
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable proxy redirect to avoid issues with some applications
        proxy_redirect off;
    }

    # Additional server configurations can be added here...
}
